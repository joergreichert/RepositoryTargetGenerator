/*
* generated by Xtext
*/
package de.abg.jreichert.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.abg.jreichert.services.TargetDefinitionGrammarAccess;

public class TargetDefinitionParser extends AbstractContentAssistParser {
	
	@Inject
	private TargetDefinitionGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.abg.jreichert.ui.contentassist.antlr.internal.InternalTargetDefinitionParser createParser() {
		de.abg.jreichert.ui.contentassist.antlr.internal.InternalTargetDefinitionParser result = new de.abg.jreichert.ui.contentassist.antlr.internal.InternalTargetDefinitionParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTargetAccess().getGroup(), "rule__Target__Group__0");
					put(grammarAccess.getTargetAccess().getGroup_2(), "rule__Target__Group_2__0");
					put(grammarAccess.getLocationAccess().getGroup(), "rule__Location__Group__0");
					put(grammarAccess.getLocationAccess().getGroup_4(), "rule__Location__Group_4__0");
					put(grammarAccess.getUnitAccess().getGroup(), "rule__Unit__Group__0");
					put(grammarAccess.getTargetAccess().getNameAssignment_1(), "rule__Target__NameAssignment_1");
					put(grammarAccess.getTargetAccess().getTargetFileNameAssignment_2_2(), "rule__Target__TargetFileNameAssignment_2_2");
					put(grammarAccess.getTargetAccess().getLocationsAssignment_3(), "rule__Target__LocationsAssignment_3");
					put(grammarAccess.getLocationAccess().getNameAssignment_0(), "rule__Location__NameAssignment_0");
					put(grammarAccess.getLocationAccess().getRepositoryLocationAssignment_1(), "rule__Location__RepositoryLocationAssignment_1");
					put(grammarAccess.getLocationAccess().getUnitAssignment_3(), "rule__Location__UnitAssignment_3");
					put(grammarAccess.getLocationAccess().getUnitAssignment_4_1(), "rule__Location__UnitAssignment_4_1");
					put(grammarAccess.getUnitAccess().getCategoryIdAssignment_0(), "rule__Unit__CategoryIdAssignment_0");
					put(grammarAccess.getUnitAccess().getVersionAssignment_1(), "rule__Unit__VersionAssignment_1");
					put(grammarAccess.getUnitAccess().getNoFeatureAssignment_2(), "rule__Unit__NoFeatureAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.abg.jreichert.ui.contentassist.antlr.internal.InternalTargetDefinitionParser typedParser = (de.abg.jreichert.ui.contentassist.antlr.internal.InternalTargetDefinitionParser) parser;
			typedParser.entryRuleTarget();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TargetDefinitionGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TargetDefinitionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
