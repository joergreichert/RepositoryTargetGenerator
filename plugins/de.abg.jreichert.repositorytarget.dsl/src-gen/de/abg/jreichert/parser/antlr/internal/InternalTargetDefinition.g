/*
* generated by Xtext
*/
grammar InternalTargetDefinition;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.abg.jreichert.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.abg.jreichert.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.abg.jreichert.services.TargetDefinitionGrammarAccess;

}

@parser::members {

 	private TargetDefinitionGrammarAccess grammarAccess;
 	
    public InternalTargetDefinitionParser(TokenStream input, TargetDefinitionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Target";	
   	}
   	
   	@Override
   	protected TargetDefinitionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTarget
entryRuleTarget returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTargetRule()); }
	 iv_ruleTarget=ruleTarget 
	 { $current=$iv_ruleTarget.current; } 
	 EOF 
;

// Rule Target
ruleTarget returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TargetDefinition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTargetAccess().getTargetDefinitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTargetAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='targetFile' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTargetAccess().getTargetFileKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTargetAccess().getEqualsSignKeyword_2_1());
    }
(
(
		lv_targetFileName_4_0=RULE_ID
		{
			newLeafNode(lv_targetFileName_4_0, grammarAccess.getTargetAccess().getTargetFileNameIDTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetFileName",
        		lv_targetFileName_4_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTargetAccess().getLocationsLocationParserRuleCall_3_0()); 
	    }
		lv_locations_5_0=ruleLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTargetRule());
	        }
       		add(
       			$current, 
       			"locations",
        		lv_locations_5_0, 
        		"Location");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	 iv_ruleLocation=ruleLocation 
	 { $current=$iv_ruleLocation.current; } 
	 EOF 
;

// Rule Location
ruleLocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getLocationAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)?(
(
		lv_repositoryLocation_1_0=RULE_URL
		{
			newLeafNode(lv_repositoryLocation_1_0, grammarAccess.getLocationAccess().getRepositoryLocationURLTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"repositoryLocation",
        		lv_repositoryLocation_1_0, 
        		"URL");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocationAccess().getUnitUnitParserRuleCall_3_0()); 
	    }
		lv_unit_3_0=ruleUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocationRule());
	        }
       		add(
       			$current, 
       			"unit",
        		lv_unit_3_0, 
        		"Unit");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLocationAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocationAccess().getUnitUnitParserRuleCall_4_1_0()); 
	    }
		lv_unit_5_0=ruleUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocationRule());
	        }
       		add(
       			$current, 
       			"unit",
        		lv_unit_5_0, 
        		"Unit");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	 iv_ruleUnit=ruleUnit 
	 { $current=$iv_ruleUnit.current; } 
	 EOF 
;

// Rule Unit
ruleUnit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_categoryId_0_0=RULE_ID
		{
			newLeafNode(lv_categoryId_0_0, grammarAccess.getUnitAccess().getCategoryIdIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"categoryId",
        		lv_categoryId_0_0, 
        		"ID");
	    }

)
)(
(
		lv_version_1_0=RULE_VERSION
		{
			newLeafNode(lv_version_1_0, grammarAccess.getUnitAccess().getVersionVERSIONTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_1_0, 
        		"VERSION");
	    }

)
)?(
(
		lv_noFeature_2_0=	'noFeature' 
    {
        newLeafNode(lv_noFeature_2_0, grammarAccess.getUnitAccess().getNoFeatureNoFeatureKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnitRule());
	        }
       		setWithLastConsumed($current, "noFeature", true, "noFeature");
	    }

)
)?)
;





RULE_URL : ('http'|'https') '://' ('a'..'z'|'A'..'Z'|'?'|'&'|'%'|'$'|'/'|'.'|'_'|'-'|'0'..'9')*;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'.'|'-') ('a'..'z'|'A'..'Z'|'_'|'.'|'-'|'0'..'9')*;

RULE_VERSION : ('0'..'9')* ('.' ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*)*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


